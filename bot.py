import telebot
import config
import random
from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
	sti = open('stickers/sticker_welcome.webp', 'rb')
	bot.send_sticker(message.chat.id, sti)

	# keyboard
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
	item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")

	markup.add(item1, item2)

	bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ú–∞—Ç–≤–µ–µ–º –°–µ–ª–∏–≤–µ—Ä—Å—Ç–æ–≤—ã–º".format(message.from_user, bot.get_me()),
		parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def blabla(message):
	if message.chat.type == 'private':
		if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
			bot.send_message(message.chat.id, str(random.randint(0,100)))
		elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
			item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

			markup.add(item1, item2)

			bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –∞ —É —Ç–µ–±—è?', reply_markup=markup)
		else:
			bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å...')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'good':
				bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ')
			elif call.data == 'bad':
				bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç')
			# remove inline buttons
			# bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ö–∞–∫ –¥–µ–ª–∞?",
			# 	reply_markup=None)
			# show alert
			# bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
			# 	text="–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")

	except Exception as e:
		print(repr(e))

# Echo
# @bot.message_handler(content_types=['text'])
# def echo(message):
# 	bot.send_message(message.chat.id, message.text)

# RUN
bot.polling(none_stop=True)